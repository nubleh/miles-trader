{"version":3,"sources":["data/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["catalog","name","id","remakes","defaultSelection","map","codeInBinLength","reduce","c","n","toString","length","codeToSelection","code","codeInBin","parseInt","codeInBinArray","split","reverse","item","itemIndex","maxInBin","valueFromCode","pop","MainDiv","styled","div","Users","ItemBox","ItemVariantBox","active","css","App","location","useLocation","history","useHistory","useState","activeUser","setActiveUser","defaultUsers","selection","queryData","search","substr","queryPart","keyValue","key","value","find","qp","userCode","parts","users","setUsers","user","actualValue","join","selectionToCode","useEffect","newPath","replace","selectItem","variantIndex","newUsers","updateUserName","userIndex","e","currentTarget","assignActiveUser","removeUser","splice","onClick","style","background","onChange","onFocus","x","push","img","usersWithThisVariant","filter","src","alt","indexOf","textDecoration","Boolean","window","hostname","match","ReactDOM","render","StrictMode","basename","path","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.205a7a90.chunk.js","sourcesContent":["const catalog = [\r\n  { name: 'Construction Sign', id: 'FtrSignConstruction', remakes: 5 },\r\n  { name: 'Lifeguard Chair', id: 'FtrMonitoringchair', remakes: 5 },\r\n  { name: 'Portable Toilet', id: 'FtrWCPortable', remakes: 5 },\r\n  { name: 'Streetlamp', id: 'FtrStreetlamp', remakes: 4 },\r\n  { name: 'Utility Pole', id: 'FtrTelephonepole', remakes: 2 },\r\n  { name: 'Drink Machine', id: 'FtrDrinkmachine', remakes: 6 },\r\n  { name: 'Public Bench', id: 'FtrPublicbench', remakes: 8 },\r\n  { name: 'Snack Machine', id: 'FtrFoodmachine', remakes: 4 },\r\n  { name: 'Springy Ride-On', id: 'FtrSpringrider', remakes: 7 },\r\n  { name: 'Tourist Telescope', id: 'FtrTelescopeSightseeing', remakes: 5 },\r\n  { name: 'Park Clock', id: 'FtrParkclock', remakes: 4 },\r\n  { name: 'Phone Box', id: 'FtrTelephonebox', remakes: 8 },\r\n  { name: 'Cotton Candy Stall', id: 'FtrCottoncandymachine', remakes: 3 },\r\n  { name: 'Playground Gym', id: 'FtrJunglegym', remakes: 5 },\r\n  { name: 'Parabolic Antenna', id: 'FtrParabolicantenna', remakes: 3 },\r\n  { name: 'Solar Panel', id: 'FtrSolarpanel', remakes: 2 },\r\n  { name: 'Wind Turbine', id: 'FtrWindturbine', remakes: 2 },\r\n  { name: 'Pool', id: 'FtrPool', remakes: 3 },\r\n  { name: 'Monster Statue', id: 'FtrMonster', remakes: 4 },\r\n  { name: 'Lighthouse', id: 'FtrLighthouse', remakes: 6 },\r\n  { name: 'Teacup Ride', id: 'FtrTurncup', remakes: 4 },\r\n];\r\n\r\nexport default catalog;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\n\r\nimport styled, { css } from 'styled-components';\r\n\r\nimport catalog from './data';\r\nconst defaultSelection = catalog.map(() => 0);\r\nconst codeInBinLength = catalog.reduce((c, n) => {\r\n  const maxValue = n.remakes - 1;\r\n  const maxInBin = maxValue.toString(2);\r\n  return c + maxInBin.length;\r\n}, 0);\r\n\r\nfunction selectionToCode (selection: number[]) {\r\n  const codeInBin = catalog.map((item, itemIndex) => {\r\n    const maxValue = item.remakes - 1;\r\n    const maxInBin = maxValue.toString(2);\r\n    let actualValue = (selection[itemIndex]).toString(2);\r\n    while (actualValue.length < maxInBin.length) {\r\n      actualValue = '0' + actualValue;\r\n    }\r\n    return actualValue;\r\n  }).join('');\r\n  return parseInt(codeInBin, 2).toString(36);\r\n}\r\n\r\nfunction codeToSelection (code: string) {\r\n  if (code === '0') {\r\n    return defaultSelection;\r\n  }\r\n  let codeInBin = parseInt(code, 36).toString(2);\r\n  while (codeInBin.length < codeInBinLength) {\r\n    codeInBin = '0' + codeInBin;\r\n  }\r\n  const codeInBinArray = codeInBin.split('');\r\n  const selection = [...catalog].reverse().map((item, itemIndex) => {\r\n    const maxValue = item.remakes - 1;\r\n    const maxInBin = maxValue.toString(2);\r\n    let valueFromCode = '';\r\n    while (valueFromCode.length < maxInBin.length && codeInBinArray.length >= 1) {\r\n      valueFromCode = codeInBinArray.pop() + valueFromCode;\r\n    }\r\n    return parseInt(valueFromCode, 2);\r\n  });\r\n  return selection.reverse();\r\n}\r\n\r\nfunction App() {\r\n\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  const [activeUser, setActiveUser] = useState(0);\r\n\r\n  let defaultUsers = [{\r\n    name: 'monique',\r\n    selection: [...defaultSelection],\r\n  }];\r\n\r\n  const queryParts = location.search.substr(1).split('&').map(queryPart => {\r\n    const keyValue = queryPart.split('=');\r\n    return {\r\n      key: keyValue[0],\r\n      value: keyValue[1],\r\n    };\r\n  });\r\n  const queryData = queryParts.find(qp => qp.key === 'data');\r\n  if (queryData) {\r\n    const userCodes = queryData.value.split(',');\r\n    const importedUsers = userCodes.map(userCode => {\r\n      const parts = userCode.split('-');\r\n      return {\r\n        name: parts[0],\r\n        selection: codeToSelection(parts[1]),\r\n      };\r\n    })\r\n    defaultUsers = importedUsers;\r\n  }\r\n  const [users, setUsers] = useState(defaultUsers);\r\n\r\n  const userCode = users.map(user => {\r\n    return `${user.name}-${selectionToCode(user.selection)}`;\r\n  }).join(',');\r\n\r\n  useEffect(() => {\r\n    const newPath = `?data=${userCode}`;\r\n    if (newPath !== location.search) {\r\n      history.replace(newPath);\r\n    }\r\n  }, [userCode, history, location]);\r\n\r\n  const selectItem = (itemIndex: number, variantIndex: number) => {\r\n    return () => {\r\n      // const newSelection = [...selection];\r\n      // newSelection[itemIndex] = variantIndex;\r\n      // setSelection(newSelection);\r\n      const newUsers = [...users];\r\n      newUsers[activeUser].selection[itemIndex] = variantIndex;\r\n      setUsers(newUsers);\r\n    };\r\n  };\r\n\r\n  const addNewUser = () => {\r\n    setUsers([\r\n      ...users,\r\n      {\r\n        name: `user_${users.length + 1}`,\r\n        selection: [...defaultSelection],\r\n      }\r\n    ]);\r\n  };\r\n\r\n  const updateUserName = (userIndex: number) => {\r\n    return (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      const newUsers = [...users];\r\n      newUsers[userIndex].name = e.currentTarget.value.replace(/\\W/g, '_');\r\n      setUsers(newUsers);\r\n    };\r\n  };\r\n\r\n  const assignActiveUser = (userIndex: number) => {\r\n    return () => {\r\n      setActiveUser(userIndex);\r\n    };\r\n  };\r\n\r\n  const removeUser = (userIndex: number) => {\r\n    return () => {\r\n      if (users.length < 2) {\r\n        return;\r\n      }\r\n      const newUsers = [...users];\r\n      newUsers.splice(userIndex, 1);\r\n      setUsers(newUsers);\r\n    };\r\n  };\r\n\r\n  return (\r\n    <MainDiv>\r\n      <Users>\r\n        <div>\r\n          <button onClick={addNewUser}>Add user</button>\r\n        </div>\r\n        <ul>\r\n          {users.map((user, userIndex) => {\r\n            return <li\r\n              key={userIndex}\r\n              style={userIndex === activeUser ? {\r\n                background: '#555',\r\n              } : {}}\r\n            >\r\n              <input\r\n                value={user.name}\r\n                onChange={updateUserName(userIndex)}\r\n                onFocus={assignActiveUser(userIndex)}\r\n              />\r\n              <span onClick={removeUser(userIndex)}>remove</span>\r\n            </li>;\r\n          })}\r\n        </ul>\r\n      </Users>\r\n      {catalog.map((item, itemIndex) => {\r\n        const remakes: string[] = [];\r\n        for(let x = 0; x < item.remakes; x++) {\r\n          remakes.push(`${item.id}_remake_${x}_0`);\r\n        }\r\n        return <ItemBox key={item.id}>\r\n          <div>{item.name}</div>\r\n          {remakes.map((img, variantIndex) => {\r\n            const usersWithThisVariant = users.filter(user => {\r\n              return user.selection[itemIndex] === variantIndex;\r\n            });\r\n            return <ItemVariantBox\r\n              onClick={selectItem(itemIndex, variantIndex)}\r\n              key={img}\r\n              active={users[activeUser].selection[itemIndex] === variantIndex}\r\n            >\r\n              <div><img\r\n                src={`img/${img}.png`}\r\n                alt={img}\r\n              /></div>\r\n              <div>\r\n                {usersWithThisVariant.map(user => {\r\n                  const userIndex = users.indexOf(user);\r\n                  return <div\r\n                    key={userIndex}\r\n                    style={userIndex === activeUser ? {\r\n                      textDecoration: 'underline',\r\n                    } : {}}\r\n                  >\r\n                    {user.name}\r\n                  </div>;\r\n                })}\r\n              </div>\r\n            </ItemVariantBox>\r\n          })}\r\n        </ItemBox>;\r\n      })}\r\n    </MainDiv>\r\n  );\r\n}\r\n\r\nconst MainDiv = styled.div`\r\n  background: #333;\r\n  color: #eee;\r\n  padding: 16px;\r\n`;\r\n\r\nconst Users = styled.div`\r\n  background: #111;\r\n  margin: 8px;\r\n  border-radius: 8px;\r\n\r\n  button {\r\n    margin: 4px;\r\n    border: none;\r\n    padding: 8px 12px;\r\n    border-radius: 4px;\r\n    background: #444;\r\n    color: #eee;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n      opacity: 0.8;\r\n    }\r\n  }\r\n\r\n  ul {\r\n    padding: 0;\r\n    margin: 0;\r\n  }\r\n\r\n  li {\r\n    list-style: none;\r\n    margin: 4px;\r\n    display: inline-block;\r\n    background: rgba(255, 255, 255, 0.1);\r\n    border-radius: 8px;\r\n\r\n    &:hover {\r\n      background: rgba(255, 255, 255, 0.2);\r\n    }\r\n\r\n    > span {\r\n      font-size: 10px;\r\n      padding: 2px 4px;\r\n      background: rgba(255, 255, 255, 0.2);\r\n      margin-right: 4px;\r\n      border-radius: 100px;\r\n      vertical-align: middle;\r\n      cursor: pointer;\r\n      display: inline-block;\r\n\r\n      &:hover {\r\n        background: rgba(255, 255, 255, 0.3);\r\n      }\r\n\r\n      &:active {\r\n        transform: translateY(1px);\r\n      }\r\n    }\r\n  }\r\n\r\n  input {\r\n    background: none;\r\n    border: none;\r\n    color: #fff;\r\n    padding: 4px 8px;\r\n    text-align: center;\r\n    cursor: pointer;\r\n    vertical-align: middle;\r\n\r\n    &:focus {\r\n      outline: none;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ItemBox = styled.div`\r\n  display: inline-block;\r\n  padding: 8px;\r\n  background: #111;\r\n  margin: 8px;\r\n  border-radius: 8px;\r\n  user-select: none;\r\n`;\r\n\r\ninterface ItemVariantBoxProps {\r\n  active?: boolean\r\n}\r\nconst ItemVariantBox = styled.div<ItemVariantBoxProps>`\r\n  display: inline-block;\r\n  padding: 8px;\r\n  border-radius: 12px;\r\n  cursor: pointer;\r\n  vertical-align: top;\r\n\r\n  > div:first-child {\r\n    text-align: center;\r\n\r\n    img {\r\n      width: 40px;\r\n      transition: transform 0.2s;\r\n    }\r\n  }\r\n\r\n  ${({ active }) => active && css`\r\n    background: rgba(255, 255, 255, 0.1);\r\n  `}\r\n\r\n  &:hover img {\r\n    transform: scale(1.5);\r\n  }\r\n`;\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter basename=\"/miles-trader\">\r\n      <Route path=\"/\">\r\n        <App />\r\n      </Route>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}